AWSTemplateFormatVersion: "2010-09-09"
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
  Subnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.0.0.0/24
      MapPublicIpOnLaunch: false
      VpcId: !Ref VPC
  Subnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: false
      VpcId: !Ref VPC
  InternetGateway:
    Type: AWS::EC2::InternetGateway
  GatewayAttachement:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  Subnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subnet1
      RouteTableId: !Ref RouteTable
  Subnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subnet2
      RouteTableId: !Ref RouteTable
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: 'For flyway'
      SubnetIds:
        - !Ref Subnet1
        - !Ref Subnet2
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: 'For flyway'
      VpcId: !Ref VPC
  SecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      FromPort: -1
      GroupId: !Ref SecurityGroup
      IpProtocol: -1
      SourceSecurityGroupId: !Ref SecurityGroup
      ToPort: -1
  Postgres:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: 20
      AllowMajorVersionUpgrade: false
      AutoMinorVersionUpgrade: true
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      BackupRetentionPeriod: 0
      CopyTagsToSnapshot: false
      DBInstanceClass: db.t2.micro
      DBSubnetGroupName: !Ref DBSubnetGroup
      DeleteAutomatedBackups: false
      DeletionProtection: false
      EnableIAMDatabaseAuthentication: false
      EnablePerformanceInsights: false
      Engine: postgres
      EngineVersion: "11.7"
      MasterUsername: postgres
      MasterUserPassword: password
      MonitoringInterval: 0
      MultiAZ: false
      PubliclyAccessible: false
      StorageEncrypted: false
      StorageType: standard
      VPCSecurityGroups:
        - !Ref SecurityGroup
  FlywayTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: ""
            Effect: "Allow"
            Principal:
              Service: "ecs-tasks.amazonaws.com"
            Action: "sts:AssumeRole"
      Description: FlywayTaskExecutionRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      Path: /
      RoleName: FlywayTaskExecutionRole
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: 'ecs'
  FlywayTask:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        -
          Command:
            - Fn::Join:
                - ""
                - - '-url=jdbc:postgresql://'
                  - Fn::GetAtt:
                      - Postgres
                      - Endpoint.Address
                  - '/postgres'
            - '-user=postgres'
            - '-password=password'
            - '-connectRetries=60'
            - 'migrate'
          Image:
            Fn::Join:
              - ''
              - - !Ref AWS::AccountId
                - '.dkr.ecr.'
                - !Ref AWS::Region
                - '.amazonaws.com/flyway:latest'
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref LogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: flyway
          MemoryReservation: 1024
          Name: 'flyway'
      Cpu: 256
      ExecutionRoleArn:
        Fn::GetAtt:
          - FlywayTaskExecutionRole
          - Arn
      Memory: 1024
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
  ECSCluster:
    Type: AWS::ECS::Cluster
